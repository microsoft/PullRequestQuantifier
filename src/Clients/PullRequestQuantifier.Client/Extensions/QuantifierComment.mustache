### Pull Request Quantified (<span style="color:{{Color}}">{{Label}}</span>)


```
Label               : {{Label}}
Diff                : +{{QuantifiedLinesAdded}} -{{QuantifiedLinesDeleted}}
Addition percentile : {{PercentileAddition}}%
Deletion percentile : {{PercentileDeletion}}%
Diff     percentile : {{FormulaPercentile}}%
```

```
File extension changes

{{Details}}
```

<p />

### Feedback: <a href="{{FeedbackLinkUp}}" target="_blank" title="Thumbs up"><strong>:thumbsup:</strong></a> <a href="{{FeedbackLinkNeutral}}" target="_blank" title="Neutral"><strong>&nbsp;:ok_hand:</strong></a> <a href="{{FeedbackLinkDown}}" target="_blank" title="Thumbs down"><strong>&nbsp;:thumbsdown:</strong></a> (<a href="MAILTO:prquant@microsoft.com" title="Mail to prquant@microsoft.com">Email</a>)

<p />

<details>
    <summary display="inline"> <strong>Pull request optimization good practices</strong> </summary>

    <p/>
    <p/>

    ##### Why small changes matter:

    - Time to review.
    - Bugs are more likely to be detected.
    - Respect other people's time.
    - Share knowledge efficiently, small portions can always be assimilated better.
    - Release fast to production, small changes are always more likely to be released faster.
    - Exercise your mind to divide big problems into smaller ones.


    ##### What can I do to optimize my changes:

    - Quantify your PR accurately: exclude files that are not necessary
    to be reviewed (autogenerated, docs, project IDE settings files, binaries ...).
    Check Excluded section from your `.prquantifier` file.
    - Split your problem into subproblems and try to code towards them.
    - Don't refactor and code new features at the same time.


    ##### How to interpret git diff:

    - One line was added: `+1 -0`
    - One line was deleted: `+0 -1`
    - One line was modified: `+1 -1`
    (git diff doesn't know about modified, will
    interpret that line like one addition plus one deletion)

</details>

### [Context configuration]({{RepositoryLink}}/?path=.prquantifier)